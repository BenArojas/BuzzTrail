// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  email      String      @unique
  name       String
  password   String
  adventures Adventure[]
}

model Adventure {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  name        String
  country     String
  state       String?
  location    String
  description String   @db.Text
  startDate   DateTime
  endDate     DateTime
  budget      Int?
  // This field is used to store the difficulty level of the adventure (e.g., "easy", "medium", "hard")
  difficulty  String
  notes       String?

  // This field is used to store the status of the adventure (e.g., "active", "completed")
  status AdventureStatus @default(NOT_STARTED)
}

enum AdventureStatus {
  NOT_STARTED
  ACTIVE
  COMPLETED
}
